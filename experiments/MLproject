name: UNOSAT_Challenge

conda_env: conda.yaml

entry_points:

  generate_3b_images:
    parameters:
      input_path: str
      output_path: str
    command: "source env.sh && python ../code/scripts/jobs/generate_3b_images.py {input_path} {output_path}"

  rasterize:
    parameters:
      input_path: str
      output_path: str
    command: "source env.sh && python ../code/scripts/jobs/generate_masks.py {input_path} {output_path}"

  generate_tiles:
    parameters:
      input_path: str
      output_path: str
    command: "source env.sh && python ../code/scripts/jobs/generate_tiles.py const_size {input_path} {output_path} 512 512 32 --extensions='tif'"

  generate_tiles_stats:
    parameters:
      input_path: str
      output_path: str
    command: "source env.sh && python ../code/scripts/jobs/generate_tiles_stats.py {input_path} {output_path}"

  generate_test_tiles:
    parameters:
      input_path: str
      output_path: str
    command: "source env.sh && python ../code/scripts/jobs/generate_tiles.py const_stride {input_path} {output_path} 2048 2048 2048 2048 --extensions='tif'"

  main:
    parameters:
      script_path: path
      config_path: path
      num_gpus: {type: float, default: 1}
    command: "source env.sh && sh setup_apex.sh && python -m torch.distributed.launch --nproc_per_node={num_gpus} -m py_config_runner {script_path} {config_path} --manual_config_load"

  ensemble:
    parameters:
      input_paths: str
    command: "source env.sh && python ../code/scripts/jobs/ensembling.py {input_paths}"

  validate:
    parameters:
      preds_paths: path
      gt_paths: path
    command: "source env.sh && python ../code/scripts/jobs/validate.py {preds_paths} {gt_paths}"

  to_submission:
    parameters:
      input_path: path
    command: "sh merge_tiles.sh {input_path} && source env.sh && python ../code/scripts/jobs/all_agg_by_city.py {input_path} && sh polygonize.sh {input_path}"
    
  merge_tiles:
    parameters:
      input_path: path
    command: "sh merge_tiles.sh {input_path}"

  all_agg_by_city:
    parameters:
      input_path: path
    command: "source env.sh && python ../code/scripts/jobs/all_agg_by_city.py {input_path}"
    
  polygonize:
    parameters:
      input_path: path
    command: "sh polygonize.sh {input_path}"
